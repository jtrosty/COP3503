import controlP5.*;


int SCREEN_X = 1200;
int SCREEN_Y = 800;
boolean play = true;

// Walk variables
int iterations = 0;
int stepCount =  0;
float arryPoint[] = {POINT_X, POINT_Y};


void setup() {
  ControlP5 UI;
  UI = new ControlP5(this);
  size(SCREEN_X, SCREEN_Y);
  background(135, 206, 235);
  pixelDensity(displayDensity());
  UserControls userControls = new UserControls(UI);
}

void draw() {
  stroke(0);
  if (counter < iterations) {
    for (int i = 0; i < stepCount; i++) {
      if (ColorChange.getState()) {
          float mappedColor = map(counter, 0, iterations, 0, 255);
          stroke(mappedColor);
      }

      arryPoint = getNextPoint(arryPoint[0], arryPoint[1], SCREEN_X, SCREEN_Y);
      point(arryPoint[0], arryPoint[1]);
      counter++;
    }
  }
  else {
    // Stop drawing
  }
}

class RandomWalk {

}

class SquareWalk extends RandomWalk {

}

class HexagonWalk extends RandomWalk {

}

public void controlEvent(ControlEvent event) {
  event.getController().getName();
}

public void Start() {
  clear();
  background(135, 206, 235);
  reset();
  iterations = int(IterationsSlider.getValue());
  if (ImmediateExecution.getState()) {
    stepCount = iterations;
  }
  else {
    stepCount = int(StepCountSlider.getValue());
  }
}

void reset() {
  counter = 0;
  arryPoint[0] = 400.0;
  arryPoint[1] = 400.0;
}

float clamp(float value, float min, float max) {
  if (value > max)          return max;
  else if (value < min)     return min;
  else                      return value;
}

float[] getNextPoint(float x, float y, float screenX, float screenY) {
  int randDir = int((random(4)));
  float result[] = {x, y};
  switch (randDir) {
    case 0:
      // Go Up
      result[1] = clamp(y + 1, 0, screenY);
      break;
    case 1:
      // Go Right
      result[0] = clamp(x + 1, 0, screenX);
      break;
    case 2:
      // Go down
      result[1] = clamp(y - 1, 0, screenY);
      break;
    case 3:
      // Go Left
      result[0] = clamp(x - 1, 0, screenX);
      break;
  }
  return result;
}

class UserControls {
  Button StartButton;
  DropdownList Shape;
  Slider MaxSteps;
  Slider StepRate;
  Slider StepSize;
  Slider StepScale;
  Toggle ConstrainStep;
  Toggle SimulateTerrain;
  Toggle UseStroke;
  Toggle UseRandomSeed;
  Textfield SeedValue;

  // UI size and position variables
  int counter = 0;
  int heightUI = 30;
  int barLengthUI = 200;
  int shortBarLengthUI = barLengthUI / 3;
  int startButtonLength = 50;

  int startPosX = 10;
  int startPosY = 10;
  int dropBoxHeight = 30;

  int fontSize = 15;
  int toggleLabelOffset = 5;

  void setUpUI() {
    StartButton = UI.addButton("START")
      .setPosition(startPosX, startPosY)
      .setSize(startButtonLength, heightUI)
      ;
    StartButton.getCaptionLabel().setSize(fontSize);

    Shape = UI.addDropdownList("Shape")
      .setPosition(sliderPosX, startPosY + heightUI + 20)
      .setSize(barLengthUI, heightUI)
      .addItem("Square", 0)
      .addItem("Hexagon", 1)
      ;
    
    MaxSteps = UI.addSlider("Maximum Steps")
      .setPosition(sliderPosX, startPosY)
      .setSize(barLengthUI, heightUI)
      .setRange(100, 500000)
      .setDecimalPrecision(0)
      .setValue(1000)
      ;
    MaxSteps.getCaptionLabel().setSize(fontSize);
    MaxSteps.getValueLabel().setSize(fontSize);

    StepRate = UI.addSlider("Step Rate")
      .setPosition(sliderPosX, startPosY)
      .setSize(barLengthUI, heightUI)
      .setRange(1, 1000)
      .setDecimalPrecision(0)
      .setValue(1000)
      ;
    StepRate.getCaptionLabel().setSize(fontSize);
    StepRate.getValueLabel().setSize(fontSize);

    StepSize = UI.addSlider("Step Size")
      .setPosition(sliderPosX, startPosY)
      .setSize(shortBarLengthUI, heightUI)
      .setRange(10, 30)
      .setDecimalPrecision(0)
      .setValue(1000)
      ;
    StepSize.getCaptionLabel().setSize(fontSize);
    StepSize.getValueLabel().setSize(fontSize);

    StepScale = UI.addSlider("Step Scale")
      .setPosition(sliderPosX, startPosY + heightUI)
      .setSize(shortBarLengthUI, heightUI)
      .setRange(1.0,1.5)
      .setDecimalPrecision(2)
      .setValue(1)
      ;
    StepScale.getCaptionLabel().setSize(fontSize);
    StepScale.getValueLabel().setSize(fontSize);

    ColorChange = UI.addToggle("Color")
      .setPosition(togglePosX, startPosY)
      .setSize(heightUI, heightUI)
      .setValue(true)
      ;
    ColorChange.getCaptionLabel().setSize(fontSize);
    ColorChange.getCaptionLabel().setPadding(heightUI + toggleLabelOffset, -((heightUI * 3) / 4));

    ImmediateExecution = UI.addToggle("Gradual")
      .setPosition(togglePosX, startPosY + heightUI)
      .setSize(heightUI, heightUI)
      .setValue(true)
      ;
    ImmediateExecution.getCaptionLabel().setSize(fontSize);
    ImmediateExecution.getCaptionLabel().setPadding(heightUI + toggleLabelOffset, -((heightUI * 3) / 4));
  }
}
